from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters import Text
import random
from bot_config import *
import sqlite3
from datetime import date

conn = sqlite3.connect('rsp.db')  # sql connection
cur = conn.cursor()

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

def main():
    #BUTTONS:
    #START KEYBOARD=======================================================================
    start_buttons=['–ò–≥—Ä–∞—Ç—å!‚ñ∂Ô∏è','–ü—Ä–æ—Ñ–∏–ª—åüì±','–¢–∞–±–ª–∏—Ü–∞ –õ–∏–¥–µ—Ä–æ–≤üìà','–ü—Ä–∞–≤–∏–ª–∞üìù']
    start_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    start_kb.add(*start_buttons)
    #=====================================================================================
    #PLAY KEYBOARD========================================================================
    play_buttons=['–ö–∞–º–µ–Ω—åüóø','–ù–æ–∂–Ω–∏—Ü—ã‚úÇ','–ë—É–º–∞–≥–∞üîñ','–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—éüó®']
    play_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    play_kb.add(*play_buttons)
    #=====================================================================================
    #Next Game Keyboard===================================================================
    ng_buttons=['–°—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑!üïπ','–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—éüó®']
    ng_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    ng_kb.add(*ng_buttons)
    #=====================================================================================
    # Leaders Keyboard====================================================================
    lk_buttons = ['–ú–∞—Ç—á–∏ü§º', '–ü–æ–±–µ–¥—ãüèÜ', '–ö—Ä–µ–¥–∏—Ç—ãüí∞', '–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—éüó®']
    lk_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    lk_kb.add(*lk_buttons)
    # ====================================================================================
    # Profile Keyboard====================================================================
    profile_buttons = ['–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è‚úè', '–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—éüó®']
    pf_kb = ReplyKeyboardMarkup(resize_keyboard=True)
    pf_kb.add(*profile_buttons)

    # =====================================================================================

    @dp.message_handler(commands=['start'])
    async def process_start_command(message: types.Message):
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –≠—Ç–æ –±–æ—Ç –¥–ª—è –∏–≥—Ä—ã –≤ '–ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞!'", reply_markup=start_kb)
        await message.answer("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é:", reply_markup=start_kb)

        user_id = message.from_user.id
        cur.execute(f'SELECT EXISTS(SELECT id FROM users WHERE id = {user_id}) ;')
        one_result = cur.fetchone()
        if one_result[0] == True:
            pass
        else:
            cur.execute(f"""INSERT INTO users(id, name, regdate, games, wins, draws,loses, credits)
            VALUES('{message.from_user.id}', '{message.from_user.first_name}', '{date.today()}', '0','0','0','0', '0');""")
            conn.commit()

    @dp.message_handler(Text(equals="–ü—Ä–∞–≤–∏–ª–∞üìù"))
    async def with_puree(message: types.Message):
        await message.reply("""–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:\n
–ë—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –∫–∞–º–µ–Ω—å (¬´–±—É–º–∞–≥–∞ –æ–±—ë—Ä—Ç—ã–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å¬ª).\n
–ö–∞–º–µ–Ω—å –ø–æ–±–µ–∂–¥–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã (¬´–∫–∞–º–µ–Ω—å –∑–∞—Ç—É–ø–ª—è–µ—Ç –∏–ª–∏ –ª–æ–º–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã¬ª).\n
–ù–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –±—É–º–∞–≥—É (¬´–Ω–æ–∂–Ω–∏—Ü—ã —Ä–∞–∑—Ä–µ–∑–∞—é—Ç –±—É–º–∞–≥—É¬ª).\n
–ï—Å–ª–∏ –∏–≥—Ä–æ–∫–∏ –ø–æ–∫–∞–∑–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∑–Ω–∞–∫, —Ç–æ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∏—á—å—è –∏ –∏–≥—Ä–∞ –ø–µ—Ä–µ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è.""")



    @dp.message_handler(Text(equals="–ü—Ä–æ—Ñ–∏–ª—åüì±"))
    async def profile(message: types.Message):
        user_id = message.from_user.id
        cur.execute(f"""SELECT * FROM users WHERE id={user_id};""")
        one_result = cur.fetchone()
        await message.reply(f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—åüì±:\n–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {one_result[2]}\n–ò–º—è: {one_result[1]}\n–ú–∞—Ç—á–∏: {one_result[3]}\n–ü–æ–±–µ–¥—ã: {one_result[4]}\n–ù–∏—á—å–∏: {one_result[5]}\n–ü–æ—Ä–∞–∂–µ–Ω–∏—è: {one_result[6]}\n–ë–∞–ª–∞–Ω—Å –∫—Ä–µ–¥–∏—Ç–æ–≤üí∞: {one_result[7]}\n', reply_markup=pf_kb)

    @dp.message_handler(Text(equals="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è‚úè"))
    async def setname_guide(message: types.Message):
        await message.answer("–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /setname. –ò–º—è –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Å—ã–ª–æ–∫ –∏ –±—ã—Ç—å –¥–ª–∏–Ω–Ω–æ–π –¥–æ 15 —Å–∏–º–≤–æ–ª–æ–≤. –ü—Ä–∏–º–µ—Ä: /setname –ò–≤–∞–Ω –ì—Ä–æ–∑–Ω—ã–π", reply_markup=pf_kb)

    @dp.message_handler(commands=['setname'])
    async def process_start_command(message: types.Message):
        new_name=message.text[9:]
        if len(new_name)>15:
            await message.answer(f"–î–ª–∏–Ω–∞ –∏–º–µ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 15 —Å–∏–º–≤–æ–ª–æ–≤!‚ùå", reply_markup=pf_kb)
        elif len(new_name)==0 or new_name.isspace():
            await message.answer(f"–ò–º—è –Ω–µ –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –ø—É—Å—Ç—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤!‚ùå", reply_markup=pf_kb)
        else:
            user_id = message.from_user.id
            cur.execute(f"""UPDATE users SET name = '{new_name}' WHERE id = {user_id} ;""")
            conn.commit()
            await message.answer(f"–í–∞—à–µ –∏–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!‚úÖ", reply_markup=pf_kb)

    @dp.message_handler(Text(equals="–¢–∞–±–ª–∏—Ü–∞ –õ–∏–¥–µ—Ä–æ–≤üìà"))
    async def leaders(message: types.Message):
        await message.answer("–í—ã–±–µ—Ä–∏ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —É–≤–∏–¥–µ—Ç—å:", reply_markup=lk_kb)

    @dp.message_handler(Text(equals="–ú–∞—Ç—á–∏ü§º"))
    async def games_leaders(message: types.Message):
        cur.execute(f"""SELECT * FROM users ORDER BY games DESC;""")
        one_result = cur.fetchmany(10)
        msgg = ''
        for indx, i in enumerate(one_result):
            if indx != 10:
                msgg += f'#{indx + 1} {i[1]}. –ú–∞—Ç—á–∏: {i[3]}\n'
            else:
                msgg += f'#{indx + 1} {i[1]}. –ú–∞—Ç—á–∏: {i[3]}'

        await message.answer(msgg, reply_markup=lk_kb)

    @dp.message_handler(Text(equals="–ü–æ–±–µ–¥—ãüèÜ"))
    async def wins_leaders(message: types.Message):
        cur.execute(f"""SELECT * FROM users ORDER BY wins DESC;""")
        one_result = cur.fetchmany(10)
        msgg = ''
        for indx, i in enumerate(one_result):
            if indx != 10:
                msgg += f'#{indx + 1} {i[1]}. –ü–æ–±–µ–¥—ã: {i[4]}\n'
            else:
                msgg += f'#{indx + 1} {i[1]}. –ü–æ–±–µ–¥—ã: {i[4]}'

        await message.answer(msgg, reply_markup=lk_kb)

    @dp.message_handler(Text(equals="–ö—Ä–µ–¥–∏—Ç—ãüí∞"))
    async def credits_leaders(message: types.Message):
        cur.execute(f"""SELECT * FROM users ORDER BY credits DESC;""")
        one_result = cur.fetchmany(10)
        msgg = ''
        for indx, i in enumerate(one_result):
            if indx != 10:
                msgg += f'#{indx + 1} {i[1]}. –ö—Ä–µ–¥–∏—Ç—ã: {i[7]}\n'
            else:
                msgg += f'#{indx + 1} {i[1]}. –ö—Ä–µ–¥–∏—Ç—ã: {i[7]}'

        await message.answer(msgg, reply_markup=lk_kb)

    @dp.message_handler(Text(equals="–ò–≥—Ä–∞—Ç—å!‚ñ∂Ô∏è"))
    async def play_command(message: types.Message):
        await message.answer("–í—ã–±–µ—Ä–∏ —Ç–æ,—á–µ–º —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è —Ö–æ–¥–∏—Ç—å:", reply_markup=play_kb)

    @dp.message_handler(Text(equals='–°—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑!üïπ'))
    async def playagain_command(message: types.Message):
        await message.answer("–í—ã–±–µ—Ä–∏ —Ç–æ,—á–µ–º —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è —Ö–æ–¥–∏—Ç—å:", reply_markup=play_kb)

    @dp.message_handler(Text(equals='–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—éüó®'))
    async def start_menu(message: types.Message):
        await message.answer("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é:", reply_markup=start_kb)

    @dp.message_handler(Text(equals='–ö–∞–º–µ–Ω—åüóø'))
    async def rock_bot_logik(message: types.Message):

        hod_comp=random.randint(1,3)

        user_id = message.from_user.id

        if hod_comp == 1:
            HOD_COMP = '–ö–∞–º–µ–Ω—å'
        elif hod_comp == 2:
            HOD_COMP = '–ù–æ–∂–Ω–∏—Ü—ã'
        elif hod_comp == 3:
            HOD_COMP = '–ë—É–º–∞–≥–∞'
        await message.reply(f'–í–∞—à —Ö–æ–¥ - –ö–∞–º–µ–Ω—å\n–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ - {HOD_COMP}')

        if hod_comp==1:
            await message.answer("–ù–∏—á—å—è!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +25", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET draws = draws + 1, games = games + 1,credits = credits + 25 WHERE id = {user_id} ;""")
            conn.commit()
        elif hod_comp==2:
            await message.answer("–ü–æ–±–µ–¥–∞!!\n–ö–∞–º–µ–Ω—å –±—å–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +50", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET wins = wins + 1, games = games + 1,credits = credits + 50 WHERE id = {user_id} ;""")
            conn.commit()
        elif hod_comp==3:
            await message.answer("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ(\n–ë—É–º–∞–≥–∞ –±—å–µ—Ç –∫–∞–º–µ–Ω—å!!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +10", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET loses = loses + 1, games = games + 1,credits = credits + 10 WHERE id = {user_id} ;""")
            conn.commit()
        await message.answer("–ñ–µ–ª–∞–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? ", reply_markup=ng_kb)

    @dp.message_handler(Text(equals='–ù–æ–∂–Ω–∏—Ü—ã‚úÇ'))
    async def scissors_bot_logik(message: types.Message):

        hod_comp = random.randint(1, 3)

        user_id = message.from_user.id

        if hod_comp == 1:
            HOD_COMP = '–ö–∞–º–µ–Ω—å'
        elif hod_comp == 2:
            HOD_COMP = '–ù–æ–∂–Ω–∏—Ü—ã'
        elif hod_comp == 3:
            HOD_COMP = '–ë—É–º–∞–≥–∞'
        await message.reply(f'–í–∞—à —Ö–æ–¥ - –ù–æ–∂–Ω–∏—Ü—ã\n–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ - {HOD_COMP}')

        if hod_comp == 1:
            await message.answer("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ(\n–ö–∞–º–µ–Ω—å –±—å–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã!!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +10", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET loses = loses + 1, games = games + 1,credits = credits + 10 WHERE id = {user_id} ;""")
            conn.commit()
        elif hod_comp == 2:
            await message.answer("–ù–∏—á—å—è!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +25", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET draws = draws + 1, games = games + 1,credits = credits + 25 WHERE id = {user_id} ;""")
            conn.commit()
        elif hod_comp == 3:
            await message.answer("–ü–æ–±–µ–¥–∞!!\n–ù–æ–∂–Ω–∏—Ü—ã –±—å—é—Ç –±—É–º–∞–≥—É!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +50", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET wins = wins + 1, games = games + 1,credits = credits + 50 WHERE id = {user_id} ;""")
            conn.commit()
        await message.answer("–ñ–µ–ª–∞–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? ", reply_markup=ng_kb)

    @dp.message_handler(Text(equals='–ë—É–º–∞–≥–∞üîñ'))
    async def paper_bot_logik(message: types.Message):

        hod_comp = random.randint(1, 3)

        user_id = message.from_user.id

        if hod_comp == 1:
            HOD_COMP = '–ö–∞–º–µ–Ω—å'
        elif hod_comp == 2:
            HOD_COMP = '–ù–æ–∂–Ω–∏—Ü—ã'
        elif hod_comp == 3:
            HOD_COMP = '–ë—É–º–∞–≥–∞'
        await message.reply(f'–í–∞—à —Ö–æ–¥ - –ë—É–º–∞–≥–∞\n–•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ - {HOD_COMP}')

        if hod_comp == 1:
            await message.answer("–ü–æ–±–µ–¥–∞!!\n–ë—É–º–∞–≥–∞ –±—å–µ—Ç –∫–∞–º–µ–Ω—å!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +50", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET wins = wins + 1, games = games + 1,credits = credits + 50 WHERE id = {user_id} ;""")
            conn.commit()
        elif hod_comp == 2:
            await message.answer("–ü–æ—Ä–∞–∂–µ–Ω–∏–µ(\n–ù–æ–∂–Ω–∏—Ü—ã –±—å—é—Ç –∫–∞–º–µ–Ω—å!!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +10", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET loses = loses + 1, games = games + 1,credits = credits + 10 WHERE id = {user_id} ;""")
            conn.commit()
        elif hod_comp == 3:
            await message.answer("–ù–∏—á—å—è!\n–ö—Ä–µ–¥–∏—Ç—ãüí∞: +25", reply_markup=ng_kb)
            cur.execute(f"""UPDATE users SET draws = draws + 1, games = games + 1,credits = credits + 25 WHERE id = {user_id} ;""")
            conn.commit()
        await message.answer("–ñ–µ–ª–∞–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? ", reply_markup=ng_kb)


    executor.start_polling(dp,skip_updates=True)

if __name__=='__main__':
    main()
